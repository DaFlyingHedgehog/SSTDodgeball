/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

/**
 * Leaderboard panel page.
 *
 * @author mama
 */
public class Leaderboard extends javax.swing.JPanel {

    private model.DodgeballTableModel tableModel;

    /**
     * Creates new form Leaderboard.
     */
    public Leaderboard() {
        initComponents();
        fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuButton = new javax.swing.JButton();
        syncButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        leaderboardTable = new javax.swing.JTable();
        leaderboardLabel = new javax.swing.JLabel();

        menuButton.setText("Menu");

        syncButton.setText("Sync");

        leaderboardTable.setAutoCreateRowSorter(true);
        leaderboardTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        leaderboardTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(leaderboardTable);

        leaderboardLabel.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        leaderboardLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        leaderboardLabel.setText("Leaderboard");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(menuButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(syncButton)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(leaderboardLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuButton)
                    .addComponent(syncButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leaderboardLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Populates leaderboardTable with data from SQLite table "leaderboard".
     */
    public void fillTable() {
        String[] columns = {"Player", "Team", "Throws", "Hits", "Catches", "H-Out", "C-Out",
            "S-Bonus", "Hit %", "Games", "Points/Games", "Total Points",};
        tableModel = new model.DodgeballTableModel(columns);
        java.util.ArrayList<java.util.HashMap<String, Object>> data = model.Controller.getData(0);
        for (java.util.HashMap<String, Object> player : data) {
            tableModel.addRow(player.values().toArray());
        }
        leaderboardTable.setModel(tableModel);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel leaderboardLabel;
    private javax.swing.JTable leaderboardTable;
    public javax.swing.JButton menuButton;
    public javax.swing.JButton syncButton;
    // End of variables declaration//GEN-END:variables
}
